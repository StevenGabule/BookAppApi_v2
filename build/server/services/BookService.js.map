{"version":3,"sources":["../../../api/server/services/BookService.js"],"names":["BookService","db","Book","findAll","newBook","create","id","updateBook","findOne","where","Number","bookToUpdate","update","bookToDelete","destroy"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;IAEMA,W;;;;;;;;;;;;;;;uBAGaC,mBAAGC,IAAH,CAAQC,OAAR,E;;;;;;;;;;;;;;;;;;;;;;;;;;;qHAMIC,O;;;;;;;uBAEJH,mBAAGC,IAAH,CAAQG,MAAR,CAAeD,OAAf,C;;;;;;;;;;;;;;;;;;;;;;;;;;;yHAMOE,E,EAAIC,W;;;;;;;;uBAEGN,mBAAGC,IAAH,CAAQM,OAAR,CAAgB;AACzCC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADkC,iBAAhB,C;;;AAArBK,gBAAAA,Y;;qBAGFA,Y;;;;;;uBACIV,mBAAGC,IAAH,CAAQU,MAAR,CAAeL,WAAf,EAA2B;AAAEE,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAAT,iBAA3B,C;;;kDACCC,W;;;kDAEF,I;;;;;;;;;;;;;;;;;;;;;;;;sHAMWD,E;;;;;;;uBAELL,mBAAGC,IAAH,CAAQM,OAAR,CAAgB;AAC3BC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADoB,iBAAhB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;wHAOOA,E;;;;;;;;uBAEOL,mBAAGC,IAAH,CAAQM,OAAR,CAAgB;AACzCC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADkC,iBAAhB,C;;;AAArBO,gBAAAA,Y;;qBAGFA,Y;;;;;;uBACWZ,mBAAGC,IAAH,CAAQY,OAAR,CAAgB;AAC3BL,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADoB,iBAAhB,C;;;;;;kDAIR,I;;;;;;;;;;;;;;;;;;;;;;;;;eAOEN,W","sourcesContent":["import db from \"../src/models\";\r\n\r\nclass BookService {\r\n  static async getAllBooks() {\r\n    try {\r\n      return await db.Book.findAll();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  static async addBook(newBook) {\r\n    try {\r\n      return await db.Book.create(newBook);\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  static async updateBook(id, updateBook) {\r\n    try {\r\n      const bookToUpdate = await db.Book.findOne({\r\n        where: { id: Number(id) },\r\n      });\r\n      if (bookToUpdate) {\r\n        await db.Book.update(updateBook, { where: { id: Number(id) } });\r\n        return updateBook;\r\n      }\r\n      return null;\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  static async getABook(id) {\r\n    try {\r\n      return await db.Book.findOne({\r\n        where: { id: Number(id) },\r\n      });\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n  static async deleteBook(id) {\r\n    try {\r\n      const bookToDelete = await db.Book.findOne({\r\n        where: { id: Number(id) },\r\n      });\r\n      if (bookToDelete) {\r\n        return await db.Book.destroy({\r\n          where: { id: Number(id) },\r\n        });\r\n      }\r\n      return null;\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n\r\nexport default BookService;\r\n"],"file":"BookService.js"}