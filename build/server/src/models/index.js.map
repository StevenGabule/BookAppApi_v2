{"version":3,"sources":["../../../../api/server/src/models/index.js"],"names":["basename","path","__filename","console","log","process","env","NODE_ENV","configJson","config","db","sequelize","environment","Sequelize","use_env_variable","DB_NAME","DB_USER","DB_PASS","host","DB_HOST","port","DB_PORT","dialect","dialectOption","ssl","logging","database","username","password","fs","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA,IAAMA,QAAQ,GAAGC,iBAAKD,QAAL,CAAcE,UAAd,CAAjB;;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,QAAxB;AACA,IAAMD,GAAG,GAAGD,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuBF,OAAO,CAACC,GAAR,CAAYC,QAAnC,GAA8C,aAA1D;AAEAJ,OAAO,CAACC,GAAR,CAAYI,mBAAWF,GAAX,CAAZ;AAEA,IAAMG,MAAM,GAAGD,mBAAWF,GAAX,CAAf;AACAH,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCE,GAAzC;AAEA,IAAMI,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIF,MAAM,CAACG,WAAP,KAAuB,YAA3B,EAAyC;AACvCD,EAAAA,SAAS,GAAG,IAAIE,oBAAJ,CAAcR,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACK,gBAAnB,CAAd,EAAoDL,MAApD,CAAZ;AACAE,EAAAA,SAAS,GAAG,IAAIE,oBAAJ,CACVR,OAAO,CAACC,GAAR,CAAYS,OADF,EAEVV,OAAO,CAACC,GAAR,CAAYU,OAFF,EAGVX,OAAO,CAACC,GAAR,CAAYW,OAHF,EAIV;AACEC,IAAAA,IAAI,EAAEb,OAAO,CAACC,GAAR,CAAYa,OADpB;AAEEC,IAAAA,IAAI,EAAEf,OAAO,CAACC,GAAR,CAAYe,OAFpB;AAGEC,IAAAA,OAAO,EAAE,UAHX;AAIEC,IAAAA,aAAa,EAAE;AACbC,MAAAA,GAAG,EAAE,IADQ;AAEb,gBAAQ;AAFK,KAJjB;AAQEC,IAAAA,OAAO,EAAE;AARX,GAJU,CAAZ;AAeD,CAjBD,MAiBO;AACLd,EAAAA,SAAS,GAAG,IAAIE,oBAAJ,CACVJ,MAAM,CAACiB,QADG,EAEVjB,MAAM,CAACkB,QAFG,EAGVlB,MAAM,CAACmB,QAHG,EAIVnB,MAJU,CAAZ;AAMD;;AAEDoB,eAAGC,WAAH,CAAeC,SAAf,EACGC,MADH,CACU,UAACC,IAAD,EAAU;AAChB,SACEA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAtB,IAA2BD,IAAI,KAAKjC,QAApC,IAAgDiC,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KADrE;AAGD,CALH,EAMGC,OANH,CAMW,UAACH,IAAD,EAAU;AACjB,MAAMI,KAAK,GAAG1B,SAAS,UAAT,CAAiBV,iBAAKqC,IAAL,CAAUP,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAvB,EAAAA,EAAE,CAAC2B,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CATH;;AAWAG,MAAM,CAACC,IAAP,CAAY/B,EAAZ,EAAgB0B,OAAhB,CAAwB,UAACM,SAAD,EAAe;AACrC,MAAIhC,EAAE,CAACgC,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BjC,IAAAA,EAAE,CAACgC,SAAD,CAAF,CAAcC,SAAd,CAAwBjC,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACG,SAAH,GAAeA,oBAAf;eAEeH,E","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport { Sequelize } from \"sequelize\";\nimport configJson from \"../config/config.js\";\nconst basename = path.basename(__filename);\n\nconsole.log(process.env.NODE_ENV);\nconst env = process.env.NODE_ENV ? process.env.NODE_ENV : \"development\";\n\nconsole.log(configJson[env]);\n\nconst config = configJson[env];\nconsole.log(\"this is the environment: \", env);\n\nconst db = {};\n\nlet sequelize;\nif (config.environment === \"production\") {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n  sequelize = new Sequelize(\n    process.env.DB_NAME,\n    process.env.DB_USER,\n    process.env.DB_PASS,\n    {\n      host: process.env.DB_HOST,\n      port: process.env.DB_PORT,\n      dialect: \"postgres\",\n      dialectOption: {\n        ssl: true,\n        native: true,\n      },\n      logging: true,\n    }\n  );\n} else {\n  sequelize = new Sequelize(\n    config.database,\n    config.username,\n    config.password,\n    config\n  );\n}\n\nfs.readdirSync(__dirname)\n  .filter((file) => {\n    return (\n      file.indexOf(\".\") !== 0 && file !== basename && file.slice(-3) === \".js\"\n    );\n  })\n  .forEach((file) => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nexport default db;\n"],"file":"index.js"}